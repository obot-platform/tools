---
Name: Gmail
Description: Create, read, and send emails in Gmail
Metadata: bundle: true
Metadata: mcp: true
Share Tools: Current Email, List Emails, Read Email, Send Email, Delete Email, Modify Email Labels, List Drafts, Create Draft, Update Draft, Delete Draft, Send Draft, List Attachments, Download Attachment, Read Attachment, List Labels, Create Label, Update Label, Delete Label

---
Name: Current Email
Description: Gets the email address of the currently signed in user
Credential: ../credential

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/currentEmail.py

---
Name: List Emails
Description: List emails in the user's Gmail account. By default, this will list emails in the inbox, but if any query is provided, it will list all emails that match the query. Supports filtering by labels, category, and query.
Credential: ../credential
Share Contexts: Email List Context
Tools: github.com/gptscript-ai/datasets/filter
Param: label_ids: (Optional: Default is 'inbox') The label_ids to list emails from, must be a comma separated list of label_ids. Valid built-in labels are 'inbox', 'starred', 'important', 'sent', 'drafts', 'trash', 'spam', 'all', as well as any custom label_ids the user has created. 
Param: category: (Optional: Default is 'primary') The category of emails to list, only valid when `inbox` is in the labels list. Valid options are 'primary', 'social', 'promotions', 'updates', 'forums'. 
Param: after: (Optional) Return only emails received strictly **after** this timestamp. Format: `YYYY-MM-DDTHH:MM:SS±HH:MM` (ISO 8601 format with timezone offset). 
Param: before: (Optional) Return only emails received strictly **before** this timestamp. Format: `YYYY-MM-DDTHH:MM:SS±HH:MM` (ISO 8601 format with timezone offset). Time and timezone are required. (Optional)
Param: query: (Optional) Search query in Gmail search syntax (e.g., "from:someuser@example.com rfc822msgid:<somemsgid@example.com> is:unread"). Don't use `before` or `after` in the query.
Param: max_results: (Optional) Maximum number of emails to list, default is 100 

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py list_emails

---
Name: Read Email
Description: Read an email or draft from the user's Gmail account
Credential: ../credential
Share Tools: List Emails, List Drafts
Param: email_id: Email or Draft ID to read (Optional: If not provided, email_subject is required)
Param: email_subject: Email subject to read (Optional: If not provided, email_id is required)

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/readEmail.py


---
Name: Send Email
Description: Send an email from the user's Gmail account. Do not attempt to forward or reply to emails using this tool.
Credential: ../credential
Param: to_emails: A comma separated list of email addresses to send the email to
Param: cc_emails: A comma separated list of email addresses to cc the email to (Optional)
Param: bcc_emails: A comma separated list of email addresses to bcc the email to (Optional)
Param: subject: Subject of the email.
Param: message: Message body of the email.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/sendEmail.py

---
Name: Delete Email
Description: Delete an email in a user's Gmail account.
Credential: ../credential
Share Tools: List Emails
Param: email_id: The ID of the email to delete

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/deleteEmail.py


---
Name: Modify Email Labels
Description: Modify labels on a Gmail email or on all messages within the same thread. Supports marking an email or the entire thread as read or unread, archiving or unarchiving, starring or unstarring, marking as important or not important, and adding or removing custom labels.
Credential: ../credential
Share Tools: List Emails
Share Context: Modify Email Labels Context
Param: email_id: (Required) The ID of the email to modify.
Param: apply_action_to_thread: (Optional) Set to true to apply all label updates and status changes (such as archive, mark as read, star, important, etc.) to every message in the thread the email belongs to. Default is false.
Param: archive: (Optional) Set to true to archive (remove from Inbox) or false to unarchive (add back to Inbox). Default is None (no change).
Param: mark_as_read: (Optional) Set to true to mark as read, or false to mark as unread. Default is None (no change).
Param: mark_as_starred: (Optional) Set to true to star the email, or false to unstar it. Default is None (no change).
Param: mark_as_important: (Optional) Set to true to mark as important, or false to remove importance. Default is None (no change).
Param: add_label_ids: (Optional) A comma-separated list of label IDs to add. Default is an empty list.
Param: remove_label_ids: (Optional) A comma-separated list of label IDs to remove. Default is an empty list.


#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py modify_message_labels

---
Name: List Drafts
Description: List drafts in a user's Gmail account
Credential: ../credential
Share Contexts: Email List Context
Tools: github.com/gptscript-ai/datasets/filter
Param: max_results: Maximum number of drafts to list (Optional: Default will list 100 drafts)
Param: attachments: A comma separated list of workspace file paths to attach to the email (Optional)

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/listDrafts.py

---
Name: Create Draft
Description: Create a draft email in a user's Gmail account.
Credential: ../credential
Share Context: Draft Context
Param: to_emails: A comma separated list of email addresses to send the email to
Param: cc_emails: A comma separated list of email addresses to cc the email to (Optional)
Param: bcc_emails: A comma separated list of email addresses to bcc the email to (Optional)
Param: reply_to_email_id: The ID of the email to reply to (Optional)
Param: reply_all: Whether to reply to all (Optional: Default is false)
Param: subject: Subject of the email
Param: message: Message body of the email
Param: attachments: A comma separated list of workspace file paths to attach to the email (Optional)

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/createDraft.py

---
Name: Update Draft
Description: Update a draft email in a user's Gmail account.
Share Context: Draft Context
Credential: ../credential
Share Tools: List Drafts, Read Email
Param: draft_id: The ID of the draft email to update
Param: to_emails: A comma separated list of email addresses to send the email to
Param: cc_emails: A comma separated list of email addresses to cc the email to (Optional)
Param: bcc_emails: A comma separated list of email addresses to bcc the email to (Optional)
Param: reply_to_email_id: The ID of the email to reply to (Optional)
Param: reply_all: Whether to reply to all (Optional: Default is false)
Param: subject: Subject of the email
Param: message: Message body of the email
Param: attachments: A comma separated list of workspace file paths to attach to the email (Optional)

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/updateDraft.py

---
Name: Delete Draft
Description: Delete a draft email in a user's Gmail account.
Share Context: Draft Context
Credential: ../credential
Share Tools: List Drafts, Read Email
Param: draft_id: The ID of the draft email to delete

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/deleteDraft.py

---
Name: Send Draft
Description: Send a draft email in a user's Gmail account.
Share Context: Draft Context
Credential: ../credential
Share Tools: List Drafts, Read Email, Create Draft, Update Draft
Param: draft_id: The ID of the draft email to send

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/sendDraft.py

---
Name: List Attachments
Description: List attachments in an email from a user's Gmail account.
Credential: ../credential
Share Context: Email List Context
Param: email_id: The ID of the email to list attachments from

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/listAttachments.py

---
Name: Download Attachment
Description: Download an attachment from an email in a user's Gmail account.
Credential: ../credential
Share Context: Email List Context
Share Tools: List Attachments
Param: email_id: The ID of the email containing the attachment
Param: attachment_id: The ID of the attachment to download
Param: filename: The name of the attachment to download

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/downloadAttachment.py

---
Name: Read Attachment
Description: Read an attachment from an email in a user's Gmail account.
Credential: ../credential
Share Context: Email List Context
Share Tools: List Attachments
Param: email_id: The ID of the email containing the attachment
Param: attachment_id: The ID of the attachment to read
Credential: sys.model.provider.credential

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/getAttachment.py

---
Name: List Labels
Description: List custom labels in a user's Gmail account. If label id is provided, it will return the metadata of the label with that id.
Credential: ../credential
Param: label_id: (Optional) The ID of the label to return. Default to empty string.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py list_labels

---
Name: Create Label
Description: Create a custom label in the user's Gmail account.
Credential: ../credential
Param: label_name: The name of the label to create.
Param: label_list_visibility: (Optional) This controls whether and how the label appears in the Gmail sidebar (left panel). Must be one of 'labelShow', 'labelHide', 'labelShowIfUnread', default is 'labelShow'.
Param: message_list_visibility: (Optional) This controls whether the label appears in the message list view. Must be one of 'show', 'hide', default is 'show'.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py create_label

---
Name: Update Label
Description: Update a custom label in the user's Gmail account. Only fields that are provided will be updated.
Credential: ../credential
Param: label_id: The ID of the label to update.
Param: label_name: (Optional) The new name of the label. 
Param: label_list_visibility: (Optional) This controls whether and how the label appears in the Gmail sidebar (left panel). Must be one of 'labelShow', 'labelHide', 'labelShowIfUnread'.
Param: message_list_visibility: (Optional) This controls whether the label appears in the message list view. Must be one of 'show', 'hide'.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py update_label

---
Name: Delete Label
Description: Delete a custom label in the user's Gmail account.
Credential: ../credential
Param: label_id: The ID of the label to delete.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py delete_label

---
Name: Draft Context
Type: context

#!sys.echo

<gmail_draft_instructions>
If more information about a draft email is required before updating, deleting, or sending it,
retrieve the contents of the current draft using the Read Email tool.

Forwarding emails is not a supported operation.
Drafts should not be used to provide indirect support for these operations.
Do not assist the user with drafting an email to forward an email in any way.
</gmail_draft_instructions>


---
Name: Modify Email Labels Context
Type: context

#!sys.echo

<gmail_label_instructions>
If the user asks to move an email to a custom label, you should add the specified label and archive the email by removing it from the inbox.
</gmail_label_instructions>


---
Name: Email List Context
Type: context
Share Context: ../../time

#!sys.echo

<gmail_dataset_instructions>
When you list the element in a dataset that contains emails, the element names will be the email IDs.
These email IDs are not useful to the user, so don't show them to the user.
Instead, get the contents of the elements and display that to the user.
</gmail_dataset_instructions>

---
!metadata:*:icon
/admin/assets/gmail_icon_small.png

---
!metadata:*:oauth
google
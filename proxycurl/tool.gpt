---
Name: LinkedIn Search
Description: Search LinkedIn for companies, users, and jobs
Metadata: bundle: true
Share Tools: Get Company Profile, Get School Profile, Get Person Profile, Company Search, Person Search, Job Search, Search by Role

---
Name: Get Company Profile
Description: Get company profile from Linkedin
Credential: ./credential
Param: url: URL of Linkedin company profile. Provide only if available
Param: company: Company name, always provide if given.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py GetCompanyProfile

---
Name: Get School Profile
Description: Get school profile from Linkedin
Credential: ./credential
Param: url: URL of Linkedin school profile. Provide only if available
Param: school: School name

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py GetSchoolProfile

---
Name: Get Person Profile
Description: Get person's profile from Linkedin URL
Credential: ./credential
Param: url: Required. URL of Linkedin profile.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py GetPersonProfile

---
Name: Company Search
Description: Search LinkedIn for matching company profiles
Credential: ./credential
Param: country: Optional. Filter by country using a case-insensitive Alpha-2 ISO3166 code.
Param: region: Optional. Filter by region; supports case-insensitive matching. Use "OR" to match multiple regions.
Param: city: Optional. Filter by city; supports case-insensitive matching. Use "OR" to match multiple cities.
Param: type: Optional. Filter by company type (e.g., PRIVATELY_HELD, PUBLICLY_HELD, NON_PROFIT, GOVERNMENT). Use "OR" to match multiple types.
Param: name: Optional. Filter by company name; supports case-insensitive matching. Use "OR" to match multiple names.
Param: industry: Optional. Filter by industry; supports case-insensitive matching. Use "OR" to match multiple industries.
Param: employee_count_min: Optional. Minimum number of employees in the company.
Param: employee_count_max: Optional. Maximum number of employees in the company.
Param: description: Optional. Filter by company description; supports case-insensitive matching. Use "OR" to match multiple descriptions.
Param: founded_after_year: Optional. Filter for companies founded after this year.
Param: founded_before_year: Optional. Filter for companies founded before this year.
Param: page_size: Optional. Number of results to apppear (1-10). Default is 1.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py SearchCompany

---
Name: Person Search
Description: Search LinkedIn for matching user profiles
Credential: ./credential
Param: country: Optional. Filter by country using a case-insensitive Alpha-2 ISO3166 code.
Param: first_name: Optional. Filter by first name. Use "OR" to match multiple names.
Param: last_name: Optional. Filter by last name. Use "OR" to match multiple names.
Param: education_field_of_study: Optional. Filter by field of study. Use "OR" to match multiple fields.
Param: education_degree_name: Optional. Filter by degree name. Use "OR" to match multiple degrees.
Param: education_school_name: Optional. Filter by school name. Use "OR" to match multiple schools.
Param: current_role_title: Optional. Filter by current job title. Use "OR" to match multiple titles.
Param: past_role_title: Optional. Filter by past job title. Use "OR" to match multiple titles.
Param: current_role_before: Optional. Filter for roles starting before this date (YYYY-MM-DD).
Param: current_role_after: Optional. Filter for roles starting after this date (YYYY-MM-DD).
Param: current_company_name: Optional. Filter by current company name. Use "OR" to match multiple companies.
Param: past_company_name: Optional. Filter by past company name. Use "OR" to match multiple companies.
Param: linkedin_groups: Optional. Filter by LinkedIn groups. Use "OR" to match multiple groups.
Param: languages: Optional. Filter by languages spoken. Use "OR" to match multiple languages.
Param: region: Optional. Filter by region. Use "OR" to match multiple regions.
Param: city: Optional. Filter by city. Use "OR" to match multiple cities.
Param: headline: Optional. Filter by LinkedIn headline. Use "OR" to match multiple headlines.
Param: summary: Optional. Filter by LinkedIn summary. Use "OR" to match multiple summaries.
Param: industries: Optional. Filter by industries. Use "OR" to match multiple industries.
Param: interests: Optional. Filter by interests. Use "OR" to match multiple interests.
Param: skills: Optional. Filter by skills. Use "OR" to match multiple skills.
Param: current_company_country: Optional. Filter by current company's country using Alpha-2 ISO3166 code.
Param: current_company_region: Optional. Filter by current company's region. Use "OR" to match multiple regions.
Param: current_company_city: Optional. Filter by current company's city. Use "OR" to match multiple cities.
Param: current_company_type: Optional. Filter by current company's type (e.g., NON_PROFIT).
Param: page_size: Optional. Number of results to apppear (1-10). Default is 1.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py SearchPerson

---
Name: Job Search
Description: Search LinkedIn for job listings
Credential: ./credential
Param: job_type: Optional. Specifies the nature of the job. Accepts the following values: full-time, part-time, contract, internship, temporary, volunteer, or anything (default).
Param: experience_level: Optional. Specifies the experience level required for the job. Accepts the following values: internship, entry_level, associate, mid_senior_level, director, or anything (default).
Param: when: Optional. Specifies when the job was posted. Accepts the following values: yesterday, past-week, past-month, or anytime (default).
Param: flexibility: Optional. Specifies the flexibility of the job. Accepts the following values: remote, on-site, hybrid, or anything (default).
Param: geo_id: Optional. Specifies the geo_id of the location to search for. Example: 92000000 for worldwide. Can be used to match regions to geo_id values.
Param: keyword: Optional. Specifies the keyword to search for (e.g., 'software engineer').
Param: search_id: Optional. Specifies the search_id of the company on LinkedIn. Can be obtained via the Company Profile API.

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py SearchJob
---
Name: Search by Role
Description: Search for person by role at company
Credential: ./credential
Param: company: Required. Company name
Param: role: Required. Role at company (e.g. CEO, Software engineer)

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/main.py SearchRole

---
!metadata:*:icon
/admin/assets/linkedin_icon.png
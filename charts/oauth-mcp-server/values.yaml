# replicaCount -- The number of Obot server instances to run
replicaCount: 1

mcpServer:
  image:
    # image.repository -- The name of the docker repository for the mcp server.
    repository: ""
    # image.tag -- The docker tag to pull for the mcp server image.
    tag: ""
    # image.pullPolicy -- Kubernetes image pullPolicy to use for the mcp server
    pullPolicy: IfNotPresent

  # config - A key/value object containing configuration variables to configure on the mcp server deployment. Will be converted to a secret and used via envFrom.
  config:
    # config.existingSecret -- The name of an existing secret to use for config instead of creating a new one. Must contain keys in env format, just like below.
    existingSecret: ""

  # extraEnv -- A map of additional environment variables to set
  extraEnv: {}
  # extraEnvFrom -- A list of additional environment variables to set from a secret
  extraEnvFrom: []

  # resources -- Resource requests and limits to use for the mcp server
  resources: {}

proxy:
  image:
    # image.repository -- The name of the docker repository for the proxy.
    repository: ""
    # image.tag -- The docker tag to pull for the proxy image.
    tag: ""
    # image.pullPolicy -- Kubernetes image pullPolicy to use for the proxy
    pullPolicy: IfNotPresent

  # config - A key/value object containing configuration variables to configure on the proxy deployment. Will be converted to a secret and used via envFrom.
  config:
    # config.existingSecret -- The name of an existing secret to use for config instead of creating a new one. Must contain keys in env format, just like below.
    existingSecret: ""

    # DATABASE_DSN -- The database connection string for the proxy.
    DATABASE_DSN: ""
    # OAUTH_CLIENT_ID -- An OAuth client ID for the proxy.
    OAUTH_CLIENT_ID: ""
    # OAUTH_CLIENT_SECRET -- An OAuth client secret for the proxy.
    OAUTH_CLIENT_SECRET: ""
    # OAUTH_AUTHORIZE_URL -- The base url for the OAuth server.
    OAUTH_AUTHORIZE_URL: ""
    # MCP_SERVER_URL -- The base url for the MCP server. Should be something like http://mcp-server:9000/mcp/gmail
    MCP_SERVER_URL: ""

  # extraEnv -- A map of additional environment variables to set
  extraEnv: {}
  # extraEnvFrom -- A list of additional environment variables to set from a secret
  extraEnvFrom: []

  # resources -- Resource requests and limits to use for the proxy
  resources: {}

# imagePullSecrets -- Configures kubernetes secrets to use for pulling private images. Expects a list of objects.
# `imagePullSecrets:[{"name": "fooBar"}]`
imagePullSecrets: []

# updateStrategy -- Configures what update strategy to use for the deployment (Recreate or RollingUpdate)
updateStrategy: "RollingUpdate"

service:
  # service.type -- Type of Kubernetes service to create
  type: ClusterIP
  # service.port -- Port for the Kubernetes service to expose
  port: 80
  # service.annotations -- Extra annotations to add to service object
  annotations: {}
  # service.spec -- Any extra fields to add to the service object spec
  spec: {}

ingress:
  # ingress.enabled -- Enables ingress creation.
  enabled: false
  # ingress.annotations -- Configure annotations to add to the ingress object
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  # ingress.className -- Configures a preexisting ingress class to use.
  className: ~
  paths:
    - path: /
      pathType: Prefix
  # ingress.extraPaths -- Define complete path objects, will be inserted before regular paths. Can be useful for things like ALB Ingress Controller actions
  extraPaths: []
  # ingress.hosts -- List of hostnames to configure the ingress with
  hosts: []
  # - chart-example.local
  # ingress.tls -- List of secrets used to configure TLS for the ingress.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  # serviceAccount.create - Specifies whether a service account should be created
  create: true
  # serviceAccount.annotation - Annotations to add to the service account
  annotations: {}
  # serviceAccount.name - The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
